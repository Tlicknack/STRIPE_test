loadWF2      <- 1


# Start the fun ...:
#
library("TSRchitect")


if (loadWF2) {
  load("PnSTRIPE_2stepwf1.RData")
} else {
  source("PnSTRIPE_2stepwf1.Rscript")
}
cat (PnSTRIPE@title,"\tWorkflow 3\n")


#We'll use the TSSthreshold derived in workflow PnSTRIPEwf2.Rscript and clustDist=40 from here on.
#To choose different values, change the following two lines appropriately.
#
 TSSthreshold <- 5
 useClustDist <- 40

# ... finding TSRs:
PnSTRIPE <- determineTSR(experimentName=PnSTRIPE, n.cores=1, tsrSetType="replicates", tssSet="all", tagCountThreshold=TSSthreshold, clustDist=useClustDist, writeTable=TRUE)

#Save image to troubleshoot
save.image(file="PnSTRIPE_2stepf3_premerge.RData")

#merge TSR for replicates
PnSTRIPE <- mergeSampleData(experimentName=PnSTRIPE)

#find TSR for merged sample
PnSTRIPE <- determineTSR(experimentName=PnSTRIPE, n.cores=1, tsrSetType="merged", tssSet="1", tagCountThreshold=TSSthreshold, clustDist=useClustDist, writeTable=TRUE)

#Save image to troubleshoot
save.image(file="PnSTRIPE_2stepf3_merged.RData")

# ... now adding annotation to the TSR data set:

PnSTRIPE <- addAnnotationToTSR(experimentName=PnSTRIPE, tsrSetType="merged", tsrSet=1, upstreamDist=pupstream, downstreamDist=pdownstream, feature="gene", featureColumn="ID", writeTable=TRUE)

# ... save the data generated by the above for future reloading with the R load command:
save.image(file="PnSTRIPE_2stepwf3.RData")
save(PnSTRIPE, file="PnSTRIPE_complete.RData")


